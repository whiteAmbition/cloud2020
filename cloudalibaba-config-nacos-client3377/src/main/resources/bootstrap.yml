server:
  port: 3377
spring:
  application:
    name: nacos-config-client
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
      config:
        server-addr: 127.0.0.1:8848
        #prefix: nacos-config-client-info
        file-extension: yaml #指定yaml格式的配置
        #命名空间：dev=102a5f56-6d28-43af-b4fe-b1181c3fb481,test=f0ea6d89-31c6-42a6-93f2-4ea21c9b53e8
        #namespace: 102a5f56-6d28-43af-b4fe-b1181c3fb481
        #group: TEST_GROUP



#${prefix}-${spring.profiles.active}.${file-extension}
#1、prefix 默认为$spring.application.name的值，也可以使用${spring.cloud.nacos.config.prefix}来配置
#2、当spring.profiles.active为空时，对应的-连接符也将不存在，dataId的拼接格式变成#${prefix}.${file-extension}
#3、file-extension为配置内容的数据格式，可以通过配置项spring.cloud.nacos.config.file-extension来配置。目前只支持properties和yaml类型。
#4、通过springcloud原生注解@RefreshScope实现配置自动更新
#nacos-config-client-dev.yaml


#namespace>group>service(默认cluster是DEFAULT)
#namespace默认public，group默认DEFAULT_GROUP，cluster默认cluster是DEFAULT

#默认情况：
#  Namespace=public，Group=DEFAULT_GROUP, 默认Cluster是DEFAULT
#
#  Nacos默认的命名空间是public，Namespace主要用来实现隔离。
#  比方说我们现在有三个环境：开发、测试、生产环境，我们就可以创建三个Namespace，不同的Namespace之间是隔离的。
#
#  Group默认是DEFAULT_GROUP，Group可以把不同的微服务划分到同一个分组里面去
#
#  Service就是微服务；一个Service可以包含多个Cluster（集群），Nacos默认Cluster是DEFAULT，Cluster是对指定微服务的一个虚拟划分。
#  比方说为了容灾，将Service微服务分别部署在了杭州机房和广州机房，
#  这时就可以给杭州机房的Service微服务起一个集群名称（HZ），
#  给广州机房的Service微服务起一个集群名称（GZ），还可以尽量让同一个机房的微服务互相调用，以提升性能。
#
#  最后是Instance，就是微服务的实例。


